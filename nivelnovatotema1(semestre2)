Trabalho da aula 1 nivel novato, oque o codigo faz:que esse código faz:

Cria a struct Territorio com os três campos pedidos.
Usa um vetor de structs para armazenar 5 territórios.
Um for faz o cadastro interativo (nome, cor e tropas).
Depois, outro for exibe todos os territórios cadastrados.
Usa fgets (com limpeza de \n) para evitar problemas ao ler strings.


#include <stdio.h>
#include <string.h>

// Definição da struct Territorio
typedef struct {
    char nome[30];   // nome do território
    char cor[10];    // cor do exército
    int tropas;      // quantidade de tropas
} Territorio;

int main() {
    Territorio territorios[5]; // vetor para armazenar 5 territórios
    int i;

    printf("=== Cadastro de Territorios ===\n");

    // Cadastro dos 5 territórios
    for (i = 0; i < 5; i++) {
        printf("\n--- Territorio %d ---\n", i + 1);

        printf("Digite o nome do territorio: ");
        fgets(territorios[i].nome, sizeof(territorios[i].nome), stdin);
        territorios[i].nome[strcspn(territorios[i].nome, "\n")] = '\0'; // remover \n do fgets

        printf("Digite a cor do exercito: ");
        fgets(territorios[i].cor, sizeof(territorios[i].cor), stdin);
        territorios[i].cor[strcspn(territorios[i].cor, "\n")] = '\0';

        printf("Digite a quantidade de tropas: ");
        scanf("%d", &territorios[i].tropas);
        getchar(); // limpar buffer do teclado
    }

    // Exibição dos dados após o cadastro
    printf("\n=== Territorios Cadastrados ===\n");
    for (i = 0; i < 5; i++) {
        printf("\nTerritorio %d:\n", i + 1);
        printf("  Nome: %s\n", territorios[i].nome);
        printf("  Cor do Exercito: %s\n", territorios[i].cor);
        printf("  Tropas: %d\n", territorios[i].tropas);
    }

    return 0;
}
