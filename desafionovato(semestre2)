#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ITENS 10 // capacidade máxima da mochila

// Definição da struct Item
typedef struct {
    char nome[30];   // nome do item
    char tipo[20];   // tipo do item (arma, munição, cura, etc.)
    int quantidade;  // quantidade do item
} Item;

// Protótipos das funções
void inserirItem(Item mochila[], int *tamanho);
void removerItem(Item mochila[], int *tamanho);
void listarItens(Item mochila[], int tamanho);
void buscarItem(Item mochila[], int tamanho);

int main() {
    Item mochila[MAX_ITENS]; // vetor que representa a mochila
    int tamanho = 0;         // quantidade atual de itens
    int opcao;

    do {
        printf("\n===== Sistema de Inventario =====\n");
        printf("1 - Inserir Item\n");
        printf("2 - Remover Item\n");
        printf("3 - Listar Itens\n");
        printf("4 - Buscar Item\n");
        printf("0 - Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);
        getchar(); // limpar buffer do teclado

        switch(opcao) {
            case 1:
                inserirItem(mochila, &tamanho);
                break;
            case 2:
                removerItem(mochila, &tamanho);
                break;
            case 3:
                listarItens(mochila, tamanho);
                break;
            case 4:
                buscarItem(mochila, tamanho);
                break;
            case 0:
                printf("\nSaindo do sistema...\n");
                break;
            default:
                printf("\nOpcao invalida! Tente novamente.\n");
        }
    } while(opcao != 0);

    return 0;
}

// Função para inserir item
void inserirItem(Item mochila[], int *tamanho) {
    if (*tamanho >= MAX_ITENS) {
        printf("\nA mochila esta cheia! Nao eh possivel adicionar mais itens.\n");
        return;
    }

    Item novo;
    printf("\nDigite o nome do item: ");
    fgets(novo.nome, sizeof(novo.nome), stdin);
    novo.nome[strcspn(novo.nome, "\n")] = '\0'; // remover o \n do fgets

    printf("Digite o tipo do item (arma, municao, cura, etc.): ");
    fgets(novo.tipo, sizeof(novo.tipo), stdin);
    novo.tipo[strcspn(novo.tipo, "\n")] = '\0';

    printf("Digite a quantidade: ");
    scanf("%d", &novo.quantidade);
    getchar();

    mochila[*tamanho] = novo;
    (*tamanho)++;

    printf("\nItem adicionado com sucesso!\n");
    listarItens(mochila, *tamanho);
}

// Função para remover item pelo nome
void removerItem(Item mochila[], int *tamanho) {
    if (*tamanho == 0) {
        printf("\nA mochila esta vazia!\n");
        return;
    }

    char nomeRemover[30];
    printf("\nDigite o nome do item a ser removido: ");
    fgets(nomeRemover, sizeof(nomeRemover), stdin);
    nomeRemover[strcspn(nomeRemover, "\n")] = '\0';

    int encontrado = -1;
    for (int i = 0; i < *tamanho; i++) {
        if (strcmp(mochila[i].nome, nomeRemover) == 0) {
            encontrado = i;
            break;
        }
    }

    if (encontrado != -1) {
        // Desloca os elementos para "tampar o buraco"
        for (int i = encontrado; i < *tamanho - 1; i++) {
            mochila[i] = mochila[i+1];
        }
        (*tamanho)--;
        printf("\nItem removido com sucesso!\n");
    } else {
        printf("\nItem nao encontrado!\n");
    }

    listarItens(mochila, *tamanho);
}

// Função para listar itens da mochila
void listarItens(Item mochila[], int tamanho) {
    if (tamanho == 0) {
        printf("\nA mochila esta vazia!\n");
        return;
    }

    printf("\n===== Itens da Mochila =====\n");
    for (int i = 0; i < tamanho; i++) {
        printf("Item %d:\n", i + 1);
        printf("  Nome: %s\n", mochila[i].nome);
        printf("  Tipo: %s\n", mochila[i].tipo);
        printf("  Quantidade: %d\n", mochila[i].quantidade);
    }
}

// Função de busca sequencial
void buscarItem(Item mochila[], int tamanho) {
    if (tamanho == 0) {
        printf("\nA mochila esta vazia!\n");
        return;
    }

    char nomeBuscar[30];
    printf("\nDigite o nome do item a ser buscado: ");
    fgets(nomeBuscar, sizeof(nomeBuscar), stdin);
    nomeBuscar[strcspn(nomeBuscar, "\n")] = '\0';

    for (int i = 0; i < tamanho; i++) {
        if (strcmp(mochila[i].nome, nomeBuscar) == 0) {
            printf("\nItem encontrado!\n");
            printf("  Nome: %s\n", mochila[i].nome);
            printf("  Tipo: %s\n", mochila[i].tipo);
            printf("  Quantidade: %d\n", mochila[i].quantidade);
            return;
        }
    }

    printf("\nItem nao encontrado!\n");
}
